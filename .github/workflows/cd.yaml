name: CD

on:
  push:
    branches:
      - main
env:
  DOCKERHUB_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKERHUB_KEY: ${{ secrets.DOCKER_KEY }}
  IMAGE_NAME: node-app

jobs:
  build-and-deploy:
    name: Build and Deploy new API
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_KEY }}

      - name: Build Docker image
        run: docker build -t ${{ env.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }} .

      - name: Push Docker image
        run: docker push ${{ env.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

      - name: Update values.yaml
        run: |
          git pull
          cd helmchart
          sed -i 's|APP_VERSION:.*|APP_VERSION: '${{ github.sha }}'|' values.yaml
          git config --global user.name 'tomdevops'
          git config --global user.email 'tomdevops@gmail.com'
          git add values.yaml
          git commit -m "Update values.yaml"
          git push

  update-openapi:
    name: Generate and Update OpenAPI
    runs-on: ubuntu-latest
    needs: build-and-deploy

    steps:
      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Generate OpenAPI JSON
      # - name: Generate OpenAPI JSON
      #   run: |
      #     node generate-openapi.js  # Replace with your actual script
      #     ls -l openapi.json  # Ensure the file is generated

      - name: Log in to Azure
        run: az login --tenant ${{ secrets.AZURE_TENANT_ID }} -u  ${{ secrets.AZURE_USERNAME }} -p  ${{ secrets.AZURE_PASSWORD }}

      - name: Update Azure API Management
        run: |
          az apim api import -g tom-test --service-name test-apim3110 --path api --api-id api --specification-path openapi.json --specification-format OpenApiJson
